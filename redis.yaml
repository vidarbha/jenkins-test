AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  AppCode:
    Type: String
  PCCode:
    Type: String
  SystemEnv:
    Type: String
  RootStackName:
    Type: String
  CacheIdentifier:
    Type: String
  CacheNodeType:
    Type: String
  NumCacheNodes:
    Type: String
  AppSubnet1Id:
    Type: String
  AppSubnet2Id:
    Type: String
  CacheParameterGroupFamily:
    Type: String
  RedisSecurityGroupName:
    Type: String

Resources:
  RedisParameterGroup:
    Type: AWS::ElastiCache::ParameterGroup
    Properties:
      CacheParameterGroupFamily: !Ref CacheParameterGroupFamily
      Description: !Ref CacheIdentifier

  RedisSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: MktPlace RedisSubnetGroup
      SubnetIds:
        - Ref: AppSubnet1Id
        - Ref: AppSubnet2Id

  RedisReplicationGroup:
    Type: AWS::ElastiCache::ReplicationGroup
    Properties:
      AutomaticFailoverEnabled: 'true'
      CacheNodeType: !Ref 'CacheNodeType'
      CacheParameterGroupName:
        Ref: RedisParameterGroup
      CacheSubnetGroupName:
        Ref: RedisSubnetGroup
      Engine: redis
      EngineVersion: 3.2.10
      NumCacheClusters: !Ref 'NumCacheNodes'
      ReplicationGroupDescription: RedisReplicationGroup
      SecurityGroupIds:
        - Fn::ImportValue: !Sub '${RootStackName}-RedisSecurityGroup'
      Tags:
        - Key: App-code
          Value: !Ref 'AppCode'
        - Key: Name
          Value: !Ref 'CacheIdentifier'
        - Key: PC-code
          Value: !Ref 'PCCode'

  RedisHostParameter:
    Type: "AWS::SSM::Parameter"
    Properties:
      Name:
        !Join
          - ''
          - - '/'
            - !Ref 'AppCode'
            - '/'
            - !Ref 'SystemEnv'
            - '/REDIS_HOST'
      Type: "String"
      Value: !GetAtt 'RedisCluster.RedisEndpoint.Address'
      Description: "REDIS Host."

  Outputs:
    RedisHostPrimary:
      Value: !GetAtt 'RedisCluster.RedisEndpoint.Address'
      Description: Redis Endpoint. Auto stored in parameter store
      Export:
        Name: !Sub '${AWS::StackName}-RedisCluster'
        
        Resources:
  Ec2Instance1:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: !Ref AppInstanceType
      ImageId: !Ref Ec2AMI
      KeyName: !Ref KeyName
      NetworkInterfaces:
       - GroupSet:
           - Fn::ImportValue: !Sub '${RootStackName}-EC2SecurityGroup'
         AssociatePublicIpAddress: 'false'
         DeviceIndex: '0'
         DeleteOnTermination: 'true'
         SubnetId:
           Ref: AppSubnet1Id
      Tags:
        - Key: App-code
          Value: !Ref AppCode
        - Key: Name
          Value: !Ref EC2AppHostName
        - Key: PC-code
          Value: !Ref PCCode
